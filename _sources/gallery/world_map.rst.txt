
:orphan:
:html_theme.sidebar_secondary.remove:

.. This document is auto-generated by the altair-gallery extension. Do not modify directly.

.. _gallery_world_map:


World Map
---------

This example shows how to create a world map using data generators for
different background layers.


.. altair-plot::
    :remove-code:
    



    import altair as alt
    from vega_datasets import data

    # Data generators for the background
    sphere = alt.sphere()
    graticule = alt.graticule()

    # Source of land data
    source = alt.topo_feature(data.world_110m.url, 'countries')

    # Layering and configuring the components 
    alt.layer(
        alt.Chart(sphere).mark_geoshape(fill='lightblue'), 
        alt.Chart(graticule).mark_geoshape(stroke='white', strokeWidth=0.5), 
        alt.Chart(source).mark_geoshape(fill='ForestGreen', stroke='black')
    ).project(
        'naturalEarth1'
    ).properties(width=600, height=400).configure_view(stroke=None)
    # No channel encoding options are specified in this chart
    # so the code is the same as for the method-based syntax.


.. tab-set::

    .. tab-item:: Method syntax
        :sync: method

        .. code:: python



            import altair as alt
            from vega_datasets import data

            # Data generators for the background
            sphere = alt.sphere()
            graticule = alt.graticule()

            # Source of land data
            source = alt.topo_feature(data.world_110m.url, 'countries')

            # Layering and configuring the components 
            alt.layer(
                alt.Chart(sphere).mark_geoshape(fill='lightblue'), 
                alt.Chart(graticule).mark_geoshape(stroke='white', strokeWidth=0.5), 
                alt.Chart(source).mark_geoshape(fill='ForestGreen', stroke='black')
            ).project(
                'naturalEarth1'
            ).properties(width=600, height=400).configure_view(stroke=None)


    .. tab-item:: Attribute syntax
        :sync: attribute

        .. code:: python



            import altair as alt
            from vega_datasets import data

            # Data generators for the background
            sphere = alt.sphere()
            graticule = alt.graticule()

            # Source of land data
            source = alt.topo_feature(data.world_110m.url, 'countries')

            # Layering and configuring the components 
            alt.layer(
                alt.Chart(sphere).mark_geoshape(fill='lightblue'), 
                alt.Chart(graticule).mark_geoshape(stroke='white', strokeWidth=0.5), 
                alt.Chart(source).mark_geoshape(fill='ForestGreen', stroke='black')
            ).project(
                'naturalEarth1'
            ).properties(width=600, height=400).configure_view(stroke=None)
            # No channel encoding options are specified in this chart
            # so the code is the same as for the method-based syntax.
