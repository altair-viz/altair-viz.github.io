
:orphan:
:html_theme.sidebar_secondary.remove:

.. This document is auto-generated by the altair-gallery extension. Do not modify directly.

.. _gallery_choropleth_repeat:


Repeated Choropleth Map
=======================
Three choropleths representing disjoint data from the same table.


.. altair-plot::
    :remove-code:
    


    import altair as alt
    from vega_datasets import data

    states = alt.topo_feature(data.us_10m.url, 'states')
    source = data.population_engineers_hurricanes.url
    variable_list = ['population', 'engineers', 'hurricanes']

    alt.Chart(states).mark_geoshape().encode(
        alt.Color(alt.repeat('row'), type='quantitative')
    ).transform_lookup(
        lookup='id',
        from_=alt.LookupData(source, 'id', variable_list)
    ).properties(
        width=500,
        height=300
    ).project(
        type='albersUsa'
    ).repeat(
        row=variable_list
    ).resolve_scale(
        color='independent'
    )
    # No channel encoding options are specified in this chart
    # so the code is the same as for the method-based syntax.


.. tab-set::

    .. tab-item:: Method syntax
        :sync: method

        .. code:: python


            import altair as alt
            from vega_datasets import data

            states = alt.topo_feature(data.us_10m.url, 'states')
            source = data.population_engineers_hurricanes.url
            variable_list = ['population', 'engineers', 'hurricanes']

            alt.Chart(states).mark_geoshape().encode(
                alt.Color(alt.repeat('row'), type='quantitative')
            ).transform_lookup(
                lookup='id',
                from_=alt.LookupData(source, 'id', variable_list)
            ).properties(
                width=500,
                height=300
            ).project(
                type='albersUsa'
            ).repeat(
                row=variable_list
            ).resolve_scale(
                color='independent'
            )


    .. tab-item:: Attribute syntax
        :sync: attribute

        .. code:: python


            import altair as alt
            from vega_datasets import data

            states = alt.topo_feature(data.us_10m.url, 'states')
            source = data.population_engineers_hurricanes.url
            variable_list = ['population', 'engineers', 'hurricanes']

            alt.Chart(states).mark_geoshape().encode(
                alt.Color(alt.repeat('row'), type='quantitative')
            ).transform_lookup(
                lookup='id',
                from_=alt.LookupData(source, 'id', variable_list)
            ).properties(
                width=500,
                height=300
            ).project(
                type='albersUsa'
            ).repeat(
                row=variable_list
            ).resolve_scale(
                color='independent'
            )
            # No channel encoding options are specified in this chart
            # so the code is the same as for the method-based syntax.
